{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/MainContent/MainContent.jsx","webpack:///./src/components/PageTitle/PageTitle.jsx","webpack:///./src/components/PageDescription/PageDescription.jsx","webpack:///./src/components/PaginationLink/PaginationLink.jsx","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/PaginatedContent/PaginatedContent.jsx"],"names":["TagTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","setState","render","this","props","location","authors","data","pageContext","tag","page","pages","total","limit","prev","next","isOpen","title","config","siteTitle","onClose","className","cover","featureImage","logo","siteLogo","navigation","siteNavigation","onClick","text","description","postEdges","nodes","postAuthors","edges","copyright","promoteGatsby","React","Component","pageQuery","MainContent","children","classes","classNames","id","role","PageTitle","PageDescription","PaginationLink","url","rest","style","to","Pagination","PaginatedContent"],"mappings":"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","file":"component---src-templates-tag-jsx-6c140ff67db694bfdd32.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport Drawer from \"../components/Drawer/Drawer\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\r\nimport MainHeader from \"../components/MainHeader/MainHeader\";\r\nimport MainNav from \"../components/MainNav/MainNav\";\r\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\r\nimport MenuButton from \"../components/MenuButton/MenuButton\";\r\nimport PageTitle from \"../components/PageTitle/PageTitle\";\r\nimport PageDescription from \"../components/PageDescription/PageDescription\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport PaginatedContent from \"../components/PaginatedContent/PaginatedContent\";\r\nimport Layout from \"../components/layout\";\r\n\r\nclass TagTemplate extends React.Component {\r\n  state = {\r\n    menuOpen: false\r\n  };\r\n\r\n  handleOnClick = evt => {\r\n    const { menuOpen } = this.state;\r\n    evt.stopPropagation();\r\n    if (menuOpen) {\r\n      this.closeMenu();\r\n    } else {\r\n      this.openMenu();\r\n    }\r\n  };\r\n\r\n  handleOnClose = evt => {\r\n    evt.stopPropagation();\r\n    this.closeMenu();\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location,\r\n      data: { authors },\r\n      pageContext: { tag, page, pages, total, limit, prev, next }\r\n    } = this.props;\r\n    const { menuOpen } = this.state;\r\n\r\n    return (\r\n      <Layout location={location}>\r\n        <Drawer isOpen={menuOpen}>\r\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\r\n\r\n          {/* The blog navigation links */}\r\n          <Navigation config={config} onClose={this.handleOnClose} />\r\n          <SiteWrapper>\r\n            {/* All the main content gets inserted here */}\r\n            <div className=\"tag-template\">\r\n              {/* The big featured header */}\r\n              <MainHeader className=\"tag-head\" cover={tag.featureImage}>\r\n                <MainNav>\r\n                  <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\r\n                  <MenuButton\r\n                    navigation={config.siteNavigation}\r\n                    onClick={this.handleOnClick}\r\n                  />\r\n                </MainNav>\r\n                <div className=\"vertical\">\r\n                  <div className=\"main-header-content inner\">\r\n                    <PageTitle text={tag} />\r\n                    <PageDescription\r\n                      text={tag.description || `A ${total}-post collection`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </MainHeader>\r\n\r\n              <PaginatedContent\r\n                page={page}\r\n                pages={pages}\r\n                total={total}\r\n                limit={limit}\r\n                prev={prev}\r\n                next={next}\r\n              >\r\n                {/* PostListing component renders all the posts */}\r\n                <PostListing postEdges={nodes} postAuthors={authors.edges} />\r\n              </PaginatedContent>\r\n            </div>\r\n            {/* The tiny footer at the very bottom */}\r\n            <Footer\r\n              copyright={config.copyright}\r\n              promoteGatsby={config.promoteGatsby}\r\n            />\r\n          </SiteWrapper>\r\n        </Drawer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n    # authors\r\n    authors: allAuthorsJson {\r\n      edges {\r\n        node {\r\n          uid\r\n          name\r\n          image\r\n          url\r\n          bio\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TagTemplate;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainContent.css\";\r\n\r\nclass MainContent extends React.Component {\r\n  render() {\r\n    const { children, className } = this.props;\r\n    const classes = classNames(\"content\", className);\r\n\r\n    return (\r\n      <main id=\"content\" className={classes} role=\"main\">\r\n        {children}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\nimport \"./PageTitle.css\";\r\n\r\nclass PageTitle extends React.Component {\r\n  render() {\r\n    const { text } = this.props;\r\n    if (text) {\r\n      return <h1 className=\"page-title\">{text}</h1>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport \"./PageDescription.css\";\r\n\r\nclass PageDescription extends React.Component {\r\n  render() {\r\n    const { text } = this.props;\r\n    if (text) {\r\n      return <h2 className=\"page-description\">{text}</h2>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PageDescription;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./PaginationLink.css\";\r\n\r\nclass PaginationLink extends React.Component {\r\n  render() {\r\n    const { url, text, className, ...rest } = this.props;\r\n    if (url) {\r\n      const classNames = className ? `nav-link ${className}` : `nav-link`;\r\n      // Clone this.props and then delete Component specific\r\n      // props so we can spread the rest into the img.\r\n      delete rest.style;\r\n\r\n      return (\r\n        <Link to={url} className={classNames} {...rest}>\r\n          {text}\r\n        </Link>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PaginationLink;\r\n","import React from \"react\";\r\nimport PaginationLink from \"../PaginationLink/PaginationLink\";\r\nimport \"./Pagination.css\";\r\n\r\nclass Pagination extends React.Component {\r\n  render() {\r\n    const { page, pages, prev, next } = this.props;\r\n    return (\r\n      <nav className=\"pagination\">\r\n        <PaginationLink\r\n          className=\"newer-posts\"\r\n          url={prev}\r\n          text=\"← Newer Posts\"\r\n        />\r\n        <span className=\"page-number\">{`Page ${page} of ${pages}`}</span>\r\n        <PaginationLink\r\n          className=\"older-posts\"\r\n          url={next}\r\n          text=\"Older Posts →\"\r\n        />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport MainContent from \"../MainContent/MainContent\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport \"./PaginatedContent.css\";\r\n\r\nclass PaginatedContent extends React.Component {\r\n  render() {\r\n    const { page, pages, prev, next, children } = this.props;\r\n    let className = \"\";\r\n    if (page > 1) {\r\n      className = `${className} paged`;\r\n    }\r\n    return (\r\n      <MainContent className={className}>\r\n        {/* Previous/next page links - only displayed on page 2+ */}\r\n        <div className=\"extra-pagination inner\">\r\n          <Pagination page={page} pages={pages} prev={prev} next={next} />\r\n        </div>\r\n\r\n        {children}\r\n\r\n        {/* Previous/next page links - displayed on every page */}\r\n        <Pagination page={page} pages={pages} prev={prev} next={next} />\r\n      </MainContent>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaginatedContent;\r\n"],"sourceRoot":""}